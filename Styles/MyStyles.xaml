<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib" 
                    xmlns:local="clr-namespace:Note_Keeper"
                    x:Class="Note_Keeper.MyStyles"
                    >
    <!-- ______________________ Fonts ______________________ -->
    <FontFamily x:Key="MaterialIcons">pack://application:,,,/Fonts/#Material Icons</FontFamily>
    
    <!-- ______________________ MainValues ______________________ -->
    <System:Double x:Key="Scrollbar.Area">15</System:Double>
    <System:Double x:Key="Scrollbar.NormalSize">15</System:Double>
    <System:Double x:Key="Scrollbar.MiniSize">2</System:Double>

    <!-- ______________________ Converters ______________________ -->
    <local:EnumToBoolConverter x:Key="EnumToBoolConverter"/>

    <!-- ______________________ ListBoxStyle ______________________ -->
    <Style x:Key="ListBoxStyle" TargetType="ListBox">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style TargetType="ListBoxItem" >
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter/>
                            <Grid x:Name="selectDock" Visibility="Hidden" IsHitTestVisible="False">
                                <Border 
                                    Background="{DynamicResource PrimaryColor}" 
                                    Width="8"
                                    CornerRadius="0,8,8,0"
                                    HorizontalAlignment="Left"/>

                                <Grid
                                    Background="{DynamicResource PrimaryColor}"
                                    Opacity="0.08"
                                    />
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsSelected" Value="false"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource ListBoxHoverColor}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="selectDock" Property="Visibility" Value="Visible" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ______________________ Text Block Sizes ______________________ -->
    <Style TargetType="TextBlock" x:Key="BigTitle">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{DynamicResource TitleTextColor}" />
        <Setter Property="FontFamily" Value="Dubai" />

    </Style>
    <Style TargetType="TextBlock" x:Key="TitleText">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{DynamicResource TitleTextColor}" />
        <Setter Property="FontFamily" Value="Dubai" />

    </Style>
    <Style TargetType="TextBlock" x:Key="NormalText">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="FontFamily" Value="Dubai" />
    </Style>
    <Style TargetType="TextBlock" x:Key="DetailText">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Thin" />
        <Setter Property="Foreground" Value="{DynamicResource SubTextColor}" />
    </Style>
    
    <!-- ______________________ Button Styles ______________________ -->
    <Style x:Key="CTAButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor.Contrast}"/>
        <Setter Property="Padding" Value="30,0"/>
        <Setter Property="MinWidth" Value="70"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" CornerRadius="18">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border.RenderTransform>
                            <TranslateTransform Y="0" x:Name="translate"/>
                        </Border.RenderTransform>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource PrimaryColor.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource PrimaryColor.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource CTAButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Padding" Value="20,0"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="18" >
                        <Grid >
                            <Border Background="{TemplateBinding Background}" CornerRadius="18" x:Name="back" Opacity="0"/>

                            <Grid Margin="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="back" Property="Opacity" Value="0.2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="back" Property="Opacity" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ThiredButtonStyle" TargetType="Button" BasedOn="{StaticResource CTAButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Background}"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="Padding" Value="40,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="back" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" CornerRadius="5" Opacity="0"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="back" Property="Opacity" Value="0.09"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="back" Property="Opacity" Value="0.12"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ______________________ Icon Button Styles ______________________ -->
    <Style x:Key="IconBaseButtonStyle" TargetType="Control">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontFamily" Value="{StaticResource MaterialIcons}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource IconsColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    
    <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource IconBaseButtonStyle}">
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="{TemplateBinding Padding}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource IconHoverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TitlebarButtonStyle" TargetType="Button" BasedOn="{StaticResource IconBaseButtonStyle}">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" CornerRadius="0">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SecondaryColor.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SecondaryColor.Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ______________________ Scrollbar Style ______________________ -->
    <ControlTemplate TargetType="RepeatButton" x:Key="PageButtons">
        <Grid Background="Transparent"/>
    </ControlTemplate>
    <Style TargetType="Thumb" x:Key="ThumbStyle">
        <Setter Property="Background" Value="{DynamicResource Scrollbar.Thumb}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource Scrollbar.ThumbHover}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate TargetType="ScrollBar" x:Key="VerticalScrollbar">
        <Border  Background="Transparent">
            <Grid Background="{TemplateBinding Background}"  HorizontalAlignment="Right" Width="{StaticResource Scrollbar.MiniSize}" x:Name="content" >
                <Track Grid.Row="1" x:Name="PART_Track" IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Template="{StaticResource PageButtons}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>

                    <Track.Thumb>
                        <Thumb Style="{StaticResource ThumbStyle}"/>
                    </Track.Thumb>

                    <Track.IncreaseRepeatButton>
                        <RepeatButton Template="{StaticResource PageButtons}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="content"
                                Storyboard.TargetProperty="Width"
                                To="{StaticResource Scrollbar.NormalSize}"
                                BeginTime="0:0:0.2"
                                Duration="0:0:0.1"
                                />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="content"
                                Storyboard.TargetProperty="Width"
                                To="{StaticResource Scrollbar.MiniSize}"
                                BeginTime="0:0:0.7"
                                Duration="0:0:0.1"
                                />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate TargetType="ScrollBar" x:Key="HorizontalScrollbar">
        <Border Background="Transparent" >
            <Grid Background="{TemplateBinding Background}" Height="{StaticResource Scrollbar.MiniSize}" VerticalAlignment="Bottom" x:Name="content">
                <Track x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Template="{StaticResource PageButtons}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>

                    <Track.Thumb>
                        <Thumb Style="{StaticResource ThumbStyle}"/>
                    </Track.Thumb>

                    <Track.IncreaseRepeatButton>
                        <RepeatButton Template="{StaticResource PageButtons}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="content"
                                Storyboard.TargetProperty="Height"
                                To="{StaticResource Scrollbar.NormalSize}"
                                BeginTime="0:0:0.2"
                                Duration="0:0:0.1"
                                />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="content"
                                Storyboard.TargetProperty="Height"
                                To="{StaticResource Scrollbar.MiniSize}"
                                BeginTime="0:0:0.7"
                                Duration="0:0:0.1"
                                />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="ScrollBar" >
        <Setter Property="Background" Value="{DynamicResource Scrollbar}"/>

        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource VerticalScrollbar}"/>
                <Setter Property="Width" Value="{StaticResource Scrollbar.Area}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalScrollbar}"/>
                <Setter Property="Height" Value="{StaticResource Scrollbar.Area}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ______________________ Textbox Style ______________________ -->
    <Style x:Key="TextboxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TitleTextColor}"/>
        <Setter Property="CaretBrush" Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Foreground}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="SelectionOpacity" Value="0.4"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <!-- ______________________ ScrollViewer Style ______________________ -->
    <Style TargetType="ScrollViewer">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition  Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition  Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <ScrollContentPresenter Margin="{TemplateBinding Padding}" Grid.RowSpan="2" Grid.ColumnSpan="2"/>

                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Grid.Column="1"/>

                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ______________________ Menu Item Style ______________________ -->
    <Style TargetType="ContextMenu">
        <Setter Property="Padding" Value="0,5" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" CornerRadius="5">
                        <StackPanel ClipToBounds="True"
                          Orientation="Vertical"
                          IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="MenuItem">
        <Setter Property="MinWidth" Value="160" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TitleTextColor}" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="20,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>

                            <!--<ContentPresenter 
                                ContentSource="Icon"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                />-->
                            <!--Implement Icon-->

                            <ContentPresenter 
                                Grid.Column="2"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentSource="Header" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SecondaryColor.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SecondaryColor.Pressed}" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Padding" Value="0,5,0,5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Rectangle Height="1" Fill="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ______________________ Window Style ______________________ -->
    <Style TargetType="Window" x:Key="WindowStyle">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
        <Setter Property="MaxHeight" Value="{x:Static SystemParameters.MaximizedPrimaryScreenHeight}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryColor}" />
        
        <EventSetter Event="Loaded" Handler="Window_Loaded"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Border Background="{DynamicResource TitleBarBackgroundColor}" Height="38" MouseDown="TitleBar_MouseDown">
                                <Grid >
                                    <TextBlock Style="{StaticResource NormalText}" Foreground="{DynamicResource SecondaryColor.Contrast}" Text="{TemplateBinding Title}" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="20,0"/>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button Style="{StaticResource TitlebarButtonStyle}" Content="dark_mode" Click="ChangeTheme_Clicked" x:Name="btnDarkMode"/>
                                        <Button Style="{StaticResource TitlebarButtonStyle}" Content="minimize" Click="Minimize_Button"/>
                                        <Button Style="{StaticResource TitlebarButtonStyle}" Content="&#xE3C1;" Click="Maxmize_Clicked" x:Name="btnMaximize"/>
                                        <Button Style="{StaticResource TitlebarButtonStyle}" Content="close" Click="Close_Clicked"/>
                                    </StackPanel>
                                </Grid>
                            </Border>

                            <ContentPresenter Grid.Row="2" Grid.Column="1"/>

                            <ResizeGrip Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Content" Value="&#xE3e0;" TargetName="btnMaximize"/>
                            <Setter Property="Margin" Value="7.3" />
                        </Trigger>
                        
                        <DataTrigger Binding="{Binding Source={x:Static local:App.Settings},Path=IsDarkMode}" Value="True">
                            <Setter Property="Content" Value="light_mode" TargetName="btnDarkMode"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ______________________ ComboBox ______________________ -->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="MinHeight" Value="27" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Padding" Value="15,0,10,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid Grid.IsSharedSizeScope="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" CornerRadius="13.5"/>

                            <Grid  Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center">
                                <Rectangle x:Name="ContentHighlight"  Opacity="0.2" Margin="-4,-1"/>
                                <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding Text}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>

                            <TextBox x:Name="PART_EditableTextBox" SelectionBrush="{DynamicResource PrimaryColor}" SelectionOpacity="0.2" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Padding="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="Center">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="AllowDrop" Value="True"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <ToggleButton x:Name="DropDownButton"  Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                        <Setter Property="Width" Value="Auto"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="{DynamicResource IconsColor}" />
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="ClickMode" Value="Press"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Grid Background="Transparent">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid  Grid.Column="1" SnapsToDevicePixels="True" Width="20">
                                                            <Path x:Name="ArrowDownPath" Data="M2.5,0L8.5,0 5.5,3z" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                        </Grid>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{DynamicResource SecondaryColor}" Background="{TemplateBinding Background}" MaxHeight="500" Padding="0,5" CornerRadius="5">
                                <ScrollViewer x:Name="DropDownScrollViewer" >
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background"  Value="#FFDADADA"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="#FFDADADA"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                                <Condition Property="IsDropDownOpen" Value="False"/>
                                <Condition Property="IsEditable" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ContentHighlight" Value="{DynamicResource PrimaryColor}"/>

                        </MultiTrigger>

                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="Visibility" TargetName="ContentSite" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"  Value="{DynamicResource SecondaryColor.Hover}"/>
                            <Setter Property="Foreground" Value="{DynamicResource IconHoverColor}" TargetName="DropDownButton" />
                        </Trigger>

                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Background"  Value="{DynamicResource BackgroundColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}" TargetName="DropDownButton" />
                        </Trigger>

                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush"  Value="{DynamicResource PrimaryColor}"/>
                        </Trigger>

                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                            <!--<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="True"/>
                            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                            <Setter Property="BorderBrush" Value="White" TargetName="DropDownBorder" />-->
                            <!--### Not Set ###-->
                        </Trigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>

                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                        </Trigger>

                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="15,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border>
                        <Grid Background="Transparent">
                            <Border CornerRadius="0,3,3,0" Background="{DynamicResource PrimaryColor}" Width="4" HorizontalAlignment="Left" Visibility="Collapsed" x:Name="selectDock"/>
                            <Grid Background="{DynamicResource PrimaryColor}" Opacity="0.09" x:Name="back" Visibility="Collapsed"/>
                            <ContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="selectDock" />
                            <Setter Property="Visibility" Value="Visible" TargetName="back" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="back" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ______________________ Sticked ComboBox ______________________ -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StickedComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="15,5,5,5" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="White" />
        <Setter Property="MinWidth" Value="140" />
        <Setter Property="MaxHeight" Value="300" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border x:Name="root" Background="{TemplateBinding Background}" CornerRadius="13" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" >
                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ToggleButton Grid.RowSpan="3" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>

                            <Grid Margin="{TemplateBinding Padding}" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>

                                <ContentPresenter x:Name="content" Content="{TemplateBinding Text}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="False"/>

                                <TextBox x:Name="PART_EditableTextBox" Text="{TemplateBinding Text}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Style="{StaticResource ComboBoxEditableTextBox}" Visibility="Collapsed"/>

                                <TextBlock Text="" Grid.Column="2" FontFamily="Material Icons" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False"/>

                            </Grid>

                            <ScrollViewer x:Name="items" Grid.Row="1" Visibility="Collapsed">
                                <StackPanel >
                                    <ItemsPresenter Margin="0,5"/>
                                </StackPanel>
                            </ScrollViewer>


                        </Grid>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="20" ShadowDepth="1" Opacity="0.1" Color="Black"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFF7F7F7" />
                            <Setter Property="BorderBrush" Value="#FFF7F7F7" />
                        </Trigger>

                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="content" />
                        </Trigger>

                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="items" />
                            <Setter Property="CornerRadius" Value="5" TargetName="root"/>
                            <Setter Property="Background" Value="White" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ______________________ Tool bar ______________________ -->
    <Style TargetType="ToolBar" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolBar">
                    <Border>
                        <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="ToggleButton" BasedOn="{StaticResource IconBaseButtonStyle}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SecondaryColor.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SecondaryColor.Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="RadioButton" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"/>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button" BasedOn="{StaticResource IconBaseButtonStyle}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SecondaryColor.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SecondaryColor.Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}"/>



</ResourceDictionary>